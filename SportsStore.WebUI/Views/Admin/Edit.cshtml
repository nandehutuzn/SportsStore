@model SportsStore.Domain.Entities.Product

@{
    ViewBag.Title = "Admin: Edit " + Model.Name;
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}
<div class="panel">
    <div class="panel-heading">
        <h3>Edit  @Model.Name</h3>
    </div>

    @using (Html.BeginForm())
    {
        <div class="panel-body">
            @Html.HiddenFor(m=>m.ProductID)
            @foreach (var property in ViewData.ModelMetadata.Properties) {
                if (property.PropertyName != "ProductID") {
                    <div class="form-group">
                        <label>@(property.DisplayName??property.PropertyName)</label>
                        @if (property.PropertyName == "Description")
                        {
                            @Html.TextArea(property.PropertyName, null, new { @class = "form-control", rows = 5 })
                        }
                        else {
                            @Html.TextBox(property.PropertyName, null, new { @class = "form-control"})
                        }
                        @Html.ValidationMessage(property.PropertyName)
                    </div>
                }
            }
        </div>

        <div class="panel-footer">
            <input type="submit" value="Save" class="btn btn-primary"/>
            @Html.ActionLink("Cancel and return to List", "Index", null, new { @class = "btn btn-default"})
        </div>
    }

</div>



@*@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Product</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ProductID)

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Category, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Category, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Category, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>*@
